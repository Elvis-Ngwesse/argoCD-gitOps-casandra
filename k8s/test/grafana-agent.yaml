apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "4"
data:
  agent.yaml: |
    server:
      log_level: debug

    metrics:                  
      wal_directory: /tmp/wal 
      global:
        scrape_interval: 60s
    
      configs:
        - name: kubernetes    
          scrape_configs:   

            - job_name: 'test-and-logging-apps'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  action: keep
                  regex: test|logging
            
                - source_labels: [__meta_kubernetes_pod_label_app]
                  action: keep
                  regex: flask-minio|argocd-app|minio
            
                # Scrape metrics ports (argocd-app = 8001, flask-minio = 8002)
                - source_labels: [__meta_kubernetes_pod_container_port]
                  action: keep
                  regex: 8001|8002|9000|9001
            
                - source_labels: [__meta_kubernetes_pod_ip,__meta_kubernetes_pod_container_port]
                  target_label: __address__
                  regex: (.+);(.+)
                  replacement: $1:$2
          
    logs:
      configs:
        - name: default
          positions:
            filename: /tmp/positions.yaml
          clients:
            - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
          scrape_configs:
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
              - source_labels: [__meta_kubernetes_namespace]
                action: keep
                regex: test|logging
              - source_labels: [__meta_kubernetes_pod_label_app]
                action: keep
                regex: argocd-app|flask-minio
              - source_labels: [__meta_kubernetes_pod_name, __meta_kubernetes_namespace, __meta_kubernetes_container_name]
                separator: "_"
                target_label: __path__
                replacement: /var/log/containers/$0-*.log
---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      securityContext:
        runAsUser: 0
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.43.2
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - --config.file=/etc/agent/agent.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/agent
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlog-containers
              mountPath: /var/log/containers
              readOnly: true
            - name: varlog-pods
              mountPath: /var/log/pods
              readOnly: true
            - name: dockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: positions
              mountPath: /tmp
            - name: wal
              mountPath: /tmp/wal
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          livenessProbe:
            httpGet:
              path: /-/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlog-containers
          hostPath:
            path: /var/log/containers
        - name: varlog-pods
          hostPath:
            path: /var/log/pods
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: positions
          emptyDir: { }
        - name: wal
          emptyDir: { }

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
  namespace: logging
  labels:
    app: grafana-agent
spec:
  selector:
    app: grafana-agent
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080





---
# NOTES - role: node
#
# ▸ Kubelet:
#   - The Kubelet is the primary Kubernetes agent that runs on each node.
#   - It ensures that containers described by PodSpecs are running.
#   - It exposes internal metrics and container stats via port 10250.
#
# ▸ cAdvisor:
#   - cAdvisor (Container Advisor) is a tool built into the Kubelet.
#   - It exposes container-level metrics like CPU, memory, network, and filesystem usage.
#   - These metrics are accessible via the `/metrics/cadvisor` endpoint on port 10250.
#
# ▸ Port 10250:
#   - Secure port used by the Kubelet for API access, metrics, and health endpoints.
#   - Requires authentication via bearer token and CA certificates.
#
# ▸ Scrape Configuration:
#   - `role: node` + `/metrics/cadvisor` → targets Kubelet's container metrics.
#   - Relabeling ensures targets are always accessed using port 10250.
#
# ▸ Logging:
#   - The logs section scrapes logs from pods running on the current node (matched by HOSTNAME).
#   - Logs are pushed to Loki via HTTP at port 3100.