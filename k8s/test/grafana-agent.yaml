apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "6"
data:
  agent.yaml: |
    server:
      log_level: info

    metrics:
      wal_directory: /tmp/grafana-agent-wal
      global:
        scrape_interval: 60s
        scrape_timeout: 10s
      configs:
        - name: default
          scrape_configs:
            - job_name: 'node_exporter'
              metrics_path: /metrics
              static_configs:
                - targets: ['localhost:9100']
                  labels:
                    instance: 'minikube-node'
              metric_relabel_configs:
                - action: drop
                  regex: node_scrape_collector_.+
                  source_labels: [__name__]
              relabel_configs:
                - replacement: 'minikube-node'
                  target_label: instance

            - job_name: 'integrations/node_exporter_journal_scrape'
              journal:
                max_age: 24h
                labels:
                  instance: 'minikube-node'
                  job: 'integrations/node_exporter'
              relabel_configs:
                - source_labels: ['__journal__systemd_unit']
                  target_label: 'unit'
                - source_labels: ['__journal__boot_id']
                  target_label: 'boot_id'
                - source_labels: ['__journal__transport']
                  target_label: 'transport'
                - source_labels: ['__journal_priority_keyword']
                  target_label: 'level'

            - job_name: 'integrations/node_exporter_direct_scrape'
              static_configs:
                - targets: ['localhost']
                  labels:
                    instance: 'minikube-node'
                    job: 'integrations/node_exporter'

          remote_write:
            - url: http://prometheus.logging.svc.cluster.local:9090/api/v1/write

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  labels:
    app: grafana-agent
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.40.2
          args:
            - run
            - --config.file=/etc/agent/agent.yaml
            - --server.http.listen-addr=0.0.0.0:12345
          ports:
            - containerPort: 12345
              name: http-metrics
          volumeMounts:
            - name: config
              mountPath: /etc/agent
              readOnly: true
            - name: host-root
              mountPath: /host
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: dockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          securityContext:
            runAsUser: 0
            privileged: true
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
        - name: host-root
          hostPath:
            path: /
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
  namespace: logging
  labels:
    app: grafana-agent
spec:
  selector:
    app: grafana-agent
  type: NodePort
  ports:
    - name: http-metrics
      protocol: TCP
      port: 80
      targetPort: 12345
      nodePort: 31245
