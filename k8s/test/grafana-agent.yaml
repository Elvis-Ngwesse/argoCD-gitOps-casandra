apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "4"
data:
  agent.yaml: |
    server:
      log_level: info  # Set log verbosity level for troubleshooting

    metrics:
      wal_directory: /tmp/wal  # Directory for write-ahead log (durability)
      global:
        scrape_interval: 60s  # How often to scrape targets

      configs:
        - name: kubelet-cadvisor
          # Scrape metrics from kubelet cAdvisor on all nodes
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: false
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - source_labels: [__address__]
              regex: '(.*):10250'
              replacement: '${1}:10250'
              target_label: __address__
          metrics_path: /metrics/cadvisor

        - name: test-and-logging-apps
          # Scrape pods in test & logging namespaces with specific apps and ports
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace]
              action: keep
              regex: test|logging

            - source_labels: [__meta_kubernetes_pod_label_app]
              action: keep
              regex: argocd-app|flask-minio|mongo|minio

            - source_labels: [__meta_kubernetes_pod_container_port_name]
              action: keep
              regex: metrics|http|web|prometheus

            - source_labels: [__meta_kubernetes_pod_container_port]
              action: keep
              regex: 9102|5000|5002|27017|9000|9001

            - source_labels: [__meta_kubernetes_pod_ip __meta_kubernetes_pod_container_port]
              target_label: __address__
              regex: (.+);(.+)
              replacement: $1:$2

        - name: kubelet
          # Scrape kubelet resource metrics on nodes
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: false
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - source_labels: [__address__]
              regex: '(.*):10250'
              replacement: '${1}:10250'
              target_label: __address__
          metrics_path: /metrics/resource

        - name: kube-state-metrics
          # Static scrape target for kube-state-metrics service
          static_configs:
            - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

        - name: kubernetes-pods-metrics
          # Scrape all pod metrics with pod and container labels for better filtering
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace]
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              target_label: pod
            - source_labels: [__meta_kubernetes_pod_container_name]
              target_label: container

    logs:
      configs:
        - name: default
          positions:
            filename: /tmp/positions.yaml  # Track last read positions in logs for continuity
          clients:
            - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push  # Loki push API endpoint
          scrape_configs:
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_node_name]
                  action: keep
                  regex: ${HOSTNAME}  # Only scrape logs from this node's pods
                - source_labels: [__meta_kubernetes_namespace]
                  action: drop
                  regex: grafana-agent  # Skip logs from the grafana-agent itself to avoid noise
                - source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
                  target_label: __path__
                  replacement: /var/log/pods/*$1/*.log  # Log file path pattern for container logs

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      securityContext:
        runAsUser: 0
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.43.2
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args:
            - --config.file=/etc/agent/agent.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/agent
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: dockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: positions
              mountPath: /tmp
            - name: wal
              mountPath: /tmp/wal
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          livenessProbe:
            httpGet:
              path: /-/ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: positions
          emptyDir: {}
        - name: wal
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
  namespace: logging
  labels:
    app: grafana-agent
spec:
  selector:
    app: grafana-agent
  ports:
    - name: http-metrics
      port: 8080
      targetPort: 8080





---
# NOTES - role: node
#
# ▸ Kubelet:
#   - The Kubelet is the primary Kubernetes agent that runs on each node.
#   - It ensures that containers described by PodSpecs are running.
#   - It exposes internal metrics and container stats via port 10250.
#
# ▸ cAdvisor:
#   - cAdvisor (Container Advisor) is a tool built into the Kubelet.
#   - It exposes container-level metrics like CPU, memory, network, and filesystem usage.
#   - These metrics are accessible via the `/metrics/cadvisor` endpoint on port 10250.
#
# ▸ Port 10250:
#   - Secure port used by the Kubelet for API access, metrics, and health endpoints.
#   - Requires authentication via bearer token and CA certificates.
#
# ▸ Scrape Configuration:
#   - `role: node` + `/metrics/cadvisor` → targets Kubelet's container metrics.
#   - Relabeling ensures targets are always accessed using port 10250.
#
# ▸ Logging:
#   - The logs section scrapes logs from pods running on the current node (matched by HOSTNAME).
#   - Logs are pushed to Loki via HTTP at port 3100.