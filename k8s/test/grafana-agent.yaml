apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
data:
  agent.yaml: |
    server:
      log_level: info
      http_listen_address: 0.0.0.0
      http_listen_port: 12345
      grpc_listen_address: 0.0.0.0
      grpc_listen_port: 12346

    integrations:
      agent:
        enabled: true

    metrics:
      wal_directory: /var/lib/grafana-agent/wal
      global:
        scrape_interval: 15s
        scrape_timeout: 10s
      configs:
        - name: default
          scrape_configs:
            - job_name: kubelet-cadvisor
              kubernetes_sd_configs:
                - role: node
              relabel_configs:
                - source_labels: [__address__]
                  regex: '(.*):10250'
                  target_label: __address__
                  replacement: '${1}:10255'
                - action: labelmap
                  regex: __meta_kubernetes_node_label_(.+)
              scheme: http
              metrics_path: /metrics/cadvisor

            - job_name: argocd-flask-apps
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app]
                  regex: flask-app
                  action: keep

    logs:
      positions_directory: /tmp/positions
      configs:
        - name: default
          clients:
            - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
          scrape_configs:
            - job_name: kubernetes-pods
              pipeline_stages:
                - docker: {}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_label_app]
                  action: keep
                  regex: .+

    traces:
      configs:
        - name: default
          receivers:
            otlp:
              protocols:
                grpc:
                http:
          remote_write:
            - endpoint: tempo.logging.svc.cluster.local:4317
              insecure: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-agent
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.40.1
          args:
            - "-config.file=/etc/agent/agent.yaml"
          ports:
            - name: http
              containerPort: 12345
            - name: grpc
              containerPort: 12346
          volumeMounts:
            - name: config
              mountPath: /etc/agent
            - name: wal-vol
              mountPath: /var/lib/grafana-agent/wal
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
        - name: wal-vol
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
  namespace: logging
spec:
  selector:
    app: grafana-agent
  ports:
    - name: http
      port: 12345
      targetPort: http
    - name: grpc
      port: 12346
      targetPort: grpc
