---
# ---------------------------------------------------
# Grafana Agent ConfigMap
# ---------------------------------------------------
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
data:
  agent.yaml: |
    server:
      log_level: debug

    metrics:
      wal_directory: /tmp/wal
      global:
        scrape_interval: 60s
      configs:
        - name: kubernetes-pods
          scrape_configs:
            - job_name: 'kubernetes-pods-5000'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  action: keep
                  regex: test|logging
                - source_labels: [__meta_kubernetes_pod_ip]
                  target_label: __address__
                  regex: (.+)
                  replacement: $1:5000
                - source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: pod
                - source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container

            - job_name: 'kubernetes-pods-5002'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  action: keep
                  regex: test|logging
                - source_labels: [__meta_kubernetes_pod_ip]
                  target_label: __address__
                  regex: (.+)
                  replacement: $1:5002
                - source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: pod
                - source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container

    logs:
      configs:
        - name: kubernetes-pods-logs
          positions:
            filename: /tmp/positions.yaml
          clients:
            - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
          scrape_configs:
            - job_name: kubernetes-pods-logs
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  action: keep
                  regex: test|logging
                - source_labels: [__meta_kubernetes_pod_name]
                  action: drop
                  regex: grafana-agent.*
                - source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: pod
                - source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container
                - source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
                  target_label: __path__
                  replacement: /var/log/pods/${1}/*${2}.log

---
# ---------------------------------------------------
# Grafana Agent Service + Deployment
# ---------------------------------------------------
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "7"
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      securityContext:
        runAsUser: 0  # Run container as root user (required for access to logs)
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.43.2
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName  # Pass node name into container env var for log filtering
          args:
            - --config.file=/etc/agent/agent.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/agent  # Mount config map here
            - name: varlog
              mountPath: /var/log  # Access node logs
              readOnly: true
            - name: dockercontainers
              mountPath: /var/lib/docker/containers  # Access docker container logs
              readOnly: true
            - name: positions
              mountPath: /tmp  # Persist log reading positions here
            - name: wal
              mountPath: /tmp/wal  # Persist WAL for metrics
          resources:
            requests:
              cpu: "100m"
              memory: "200Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          livenessProbe:
            httpGet:
              path: /-/ready  # Readiness endpoint for health checks
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          ports:
            - containerPort: 8080
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config  # Use the configmap defined above
        - name: varlog
          hostPath:
            path: /var/log  # Host log directory
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers  # Docker containers logs directory
        - name: positions
          emptyDir: {}  # Ephemeral storage for log reading positions
        - name: wal
          persistentVolumeClaim:
            claimName: grafana-agent-wal-pvc  # PVC to persist WAL data
