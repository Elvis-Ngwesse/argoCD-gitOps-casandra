---
# ---------------------------------------------------
# Grafana Agent ConfigMap
# ---------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
data:
  agent.yaml: |
    server:
      log_level: info
      log_format: logfmt
      http:
        listen_address: 0.0.0.0:12345

    metrics:
      wal_directory: /tmp/wal
      global:
        scrape_interval: 60s
      configs:
        - name: default
          scrape_configs:
            - job_name: flask-service
              static_configs:
                - targets: ['flask-service.test.svc.cluster.local:5000']
            - job_name: flask-minio-service
              static_configs:
                - targets: ['flask-minio-service.test.svc.cluster.local:5002']
          remote_write:
            - url: http://prometheus.logging.svc.cluster.local:9090/api/v1/write

    logs:
      configs:
        - name: default
          positions:
            filename: /tmp/positions.yaml
          clients:
            - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
          scrape_configs:
            - job_name: promtail-logs-test
              static_configs:
                - targets: [localhost]
                  labels:
                    job: docker-logs
                    namespace: test
                    __path__: /var/lib/docker/containers/*/*-json.log

            - job_name: promtail-logs-logging
              static_configs:
                - targets: [localhost]
                  labels:
                    job: docker-logs
                    namespace: logging
                    __path__: /var/lib/docker/containers/*/*-json.log

---
# ---------------------------------------------------
# Grafana Agent DaemonSet
# ---------------------------------------------------
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      securityContext:
        runAsUser: 0
      containers:
        - name: grafana-agent
          image: grafana/agent:v0.43.2
          args:
            - --config.file=/etc/agent/agent.yaml
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: dockersock
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: positions
              mountPath: /run/promtail
      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: varlog
          hostPath:
            path: /var/log
            type: Directory
        - name: dockersock
          hostPath:
            path: /var/lib/docker/containers
            type: Directory
        - name: positions
          emptyDir: { }
---
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-agent
  namespace: logging
  labels:
    app: grafana-agent
spec:
  selector:
    app: grafana-agent
  ports:
    - protocol: TCP
      port: 12345
      targetPort: 12345
      name: http-metrics
  type: ClusterIP
