apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
data:
  agent.yaml: |
    server:
      log_level: info

    metrics:
      global:
        scrape_interval: 15s
      configs:
        - name: default
          scrape_configs:
            - job_name: agent
              static_configs:
                - targets: ['127.0.0.1:12345']
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  regex: test|logging|argocd
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                  regex: "true"
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  target_label: __metrics_path__
                  regex: (.+)
                  action: replace
                - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
                  regex: (.+):(?:\d+);(\d+)
                  replacement: $1:$2
                  target_label: __address__
                  action: replace

    logs:
      configs:
        - name: default
          positions:
            filename: /tmp/positions.yaml
          clients:
            - url: http://loki:3100/loki/api/v1/push
          scrape_configs:
            - job_name: kubernetes-pods
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_namespace]
                  regex: test|logging|argocd
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_promtail_io_scrape]
                  regex: "true"
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_promtail_io_path]
                  target_label: __path__
                  action: replace
                - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
                  target_label: app
                - source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                - source_labels: [__meta_kubernetes_pod_name]
                  target_label: pod
                - source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container
                - action: replace
                  source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: __path__
                  replacement: /var/log/containers/*$1*.log
              pipeline_stages:
                - cri: {}

    traces:
      configs:
        - name: default
          receivers:
            jaeger:
              protocols:
                grpc: {}
          remote_write:
            - endpoint: tempo.logging.svc.cluster.local:55680
              insecure: true
          batch:
            timeout: 5s
            send_batch_size: 100

    integrations:
      node_exporter:
        enabled: true
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  selector:
    matchLabels:
      app: grafana-agent
  template:
    metadata:
      labels:
        app: grafana-agent
    spec:
      serviceAccountName: grafana-agent
      containers:
        - name: agent
          image: grafana/agent:v0.40.2
          args:
            - "-config.file=/etc/agent/agent.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/agent
            - name: varlog
              mountPath: /var/log
            - name: dockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: grafana-agent-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockercontainers
          hostPath:
            path: /var/lib/docker/containers
