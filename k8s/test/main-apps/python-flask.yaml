# ---------------------------------------------------
# Flask App Deployment
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-app
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: argocd-app
  template:
    metadata:
      labels:
        app: argocd-app
    spec:
      containers:
        - name: argocd-app
          image: dockerelvis/argocd-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
            - containerPort: 8001
          env:
            - name: MONGO_URI
              value: "mongodb://mongo-service:27017"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  type: NodePort
  selector:
    app: argocd-app
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30090

---
# ---------------------------------------------------
# Flask MinIO Deployment
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-minio
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-minio
  template:
    metadata:
      labels:
        app: flask-minio
    spec:
      containers:
        - name: flask-minio
          image: dockerelvis/presigned-app:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5002
            - containerPort: 8002
          env:
            - name: MINIO_ENDPOINT
              value: "http://minio-service:9000"
            - name: MINIO_BUCKET
              value: "test-reports"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: secretkey
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5002
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5002
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi

---
apiVersion: v1
kind: Service
metadata:
  name: flask-minio-service
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  type: NodePort
  selector:
    app: flask-minio
  ports:
    - port: 80
      targetPort: 5002
      nodePort: 30091
