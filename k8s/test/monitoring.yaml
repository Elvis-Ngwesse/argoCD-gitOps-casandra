# ------------------------------
# Promtail ServiceAccount & RBAC
# ------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "5"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-pod-reader
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-pod-reader-binding
subjects:
  - kind: ServiceAccount
    name: promtail
    namespace: test
roleRef:
  kind: ClusterRole
  name: promtail-pod-reader
  apiGroup: rbac.authorization.k8s.io

# ------------------------------
# Loki Deployment
# ------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          args: ["-config.file=/etc/loki/config.yaml"]
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: wal
              mountPath: /wal
            - name: loki-data
              mountPath: /loki
      volumes:
        - name: config
          configMap:
            name: loki-config
        - name: wal
          emptyDir: {}
        - name: loki-data
          emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
data:
  config.yaml: |
    auth_enabled: false
    server:
      http_listen_port: 3100
    ingester:
      wal:
        enabled: true
        dir: /wal
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 3m
      chunk_retain_period: 1m
    schema_config:
      configs:
        - from: 2024-01-01
          store: boltdb
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb:
        directory: /loki/index
      filesystem:
        directory: /loki/chunks
    limits_config:
      enforce_metric_name: false
    chunk_store_config:
      max_look_back_period: 0s
    table_manager:
      retention_deletes_enabled: true
      retention_period: 24h

---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  ports:
    - port: 3100
      targetPort: 3100
  selector:
    app: loki

---
# Promtail
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      serviceAccountName: promtail
      containers:
        - name: promtail
          image: grafana/promtail:2.9.0
          args: ["-config.file=/etc/promtail/config.yaml"]
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: pods
              mountPath: /var/log/pods
              readOnly: true
            - name: containers
              mountPath: /var/lib/containerd
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: pods
          hostPath:
            path: /var/log/pods
        - name: containers
          hostPath:
            path: /var/lib/containerd

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
data:
  config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/*.log

      - job_name: flask-app
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: argocd-app|flask-minio
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_container_name]
            target_label: container
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node
          - source_labels: [__meta_kubernetes_pod_label_app]
            target_label: job
          - action: replace
            source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_container_name]
            regex: (.+);(.+)
            replacement: /var/log/pods/${1}/*.log
            target_label: __path__

---
# Grafana
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
      nodePort: 30091
