
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage-pvc
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-compactor-pvc
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "4"
data:
  loki-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    distributor:
      ring:
        kvstore:
          store: memberlist

    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
        final_sleep: 0s
      chunk_idle_period: 5m
      chunk_retain_period: 30m

    memberlist:
      abort_if_cluster_join_fails: false
      bind_port: 7946
      max_join_backoff: 1m
      max_join_retries: 10
      min_join_backoff: 1s

    schema_config:
      configs:
      - from: 2020-05-15
        store: boltdb-shipper
        object_store: filesystem
        schema: v11
        index:
          prefix: index_
          period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/index
        cache_location: /loki/index_cache
        shared_store: filesystem

      filesystem:
        directory: /loki/chunks

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h

    compactor:
      working_directory: /data/compactor
      shared_store: filesystem
      compaction_interval: 5m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.7.3
          args:
            - -config.file=/etc/loki/loki-config.yaml
            - -target=all
            - -log.level=info
          ports:
            - containerPort: 3100
              name: http
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/loki-config.yaml
              subPath: loki-config.yaml
              readOnly: true
            - name: loki-storage
              mountPath: /loki
            - name: loki-compactor
              mountPath: /data
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
            items:
              - key: loki-config.yaml
                path: loki-config.yaml
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage-pvc
        - name: loki-compactor
          persistentVolumeClaim:
            claimName: loki-compactor-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: logging
spec:
  type: NodePort
  selector:
    app: loki
  ports:
    - name: http
      port: 3100
      targetPort: 3100
      nodePort: 31031
