---
# ---------------------------------------------------
# Loki loki-config
# ---------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "5"
data:
  loki-config.yaml: |
    auth_enabled: false  # Disable auth; useful in dev/testing

    server:
      http_listen_port: 3100  # Loki's main HTTP port

    distributor:
      ring:
        kvstore:
          store: memberlist  # Uses gossip protocol for clustering

    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1  # 1 replica (dev setup)
      chunk_idle_period: 5m     # Flush chunks idle for 5 minutes
      chunk_retain_period: 30m  # Retain chunks in memory for 30 minutes

    memberlist:
      bind_port: 7946  # Gossip protocol port
      abort_if_cluster_join_fails: false
      max_join_backoff: 1m
      max_join_retries: 10
      min_join_backoff: 1s

    schema_config:
      configs:
      - from: 2020-05-15
        store: boltdb-shipper
        object_store: filesystem
        schema: v11
        index:
          prefix: index_
          period: 24h

    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/index
        cache_location: /loki/index_cache
        shared_store: filesystem

      filesystem:
        directory: /loki/chunks  # Local storage for logs

    limits_config:
      reject_old_samples: true
      reject_old_samples_max_age: 168h  # Reject samples older than 7 days

    compactor:
      working_directory: /data/compactor
      shared_store: filesystem
      compaction_interval: 5m  # Compact small index files every 5 minutes
---
# ---------------------------------------------------
# Loki Deployment + Service
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: logging
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:2.7.3
          securityContext:
            runAsUser: 0  # Loki sometimes needs root to access volumes
          args:
            - -config.file=/etc/loki/loki-config.yaml
          ports:
            - containerPort: 3100
              name: http
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki/loki-config.yaml
              subPath: loki-config.yaml
              readOnly: true
            - name: loki-storage
              mountPath: /loki  # For chunk + index storage
            - name: loki-compactor
              mountPath: /data  # For compactor to store data
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
            items:
              - key: loki-config.yaml
                path: loki-config.yaml
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage-pvc
        - name: loki-compactor
          persistentVolumeClaim:
            claimName: loki-storage-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: logging
spec:
  type: NodePort
  selector:
    app: loki
  ports:
    - name: http
      port: 3100
      targetPort: 3100
      nodePort: 31031  # You can now reach Loki at <NodeIP>:31031
