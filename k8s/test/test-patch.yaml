# ---------------------------------------------------
# Grafana Patch
# ---------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: test-env
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: test-env
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
---

# ---------------------------------------------------
# Jobs Patch
# ---------------------------------------------------
apiVersion: batch/v1
kind: Job
metadata:
  name: python-test-job
  namespace: test-env
---

# ---------------------------------------------------
# Loki Patch
# ---------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: loki
  ports:
    - port: 3100
      targetPort: 3100
      name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: test-env
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: test-env
spec:
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
---

# ---------------------------------------------------
# Minio Patch
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: test-env
spec:
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: minio
  ports:
    - name: api
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
---

# ---------------------------------------------------
# Mongo Patch
# ---------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: test-env
spec:
  clusterIP: None
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: test-env
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
---

# ---------------------------------------------------
# Namespace Patch
# ---------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: test-env
---

# ---------------------------------------------------
# Prometheus Patch
# ---------------------------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: test-env
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: test-env
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
---

# ---------------------------------------------------
# Flask App Patch
# ---------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: customer-app-service
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: customer-app-service
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: report-url-generator-service
  namespace: test-env
spec:
  type: NodePort
  selector:
    app: report-url-generator
  ports:
    - port: 5002
      targetPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-app
  namespace: test-env
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-app
  template:
    metadata:
      labels:
        app: customer-app
    spec:
      containers:
        - name: customer-app
          image: dockerelvis/customer-app:447ddf1-20250629081357
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: report-url-generator
  namespace: test-env
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report-url-generator
  template:
    metadata:
      labels:
        app: report-url-generator
    spec:
      containers:
        - name: report-url-api
          image: dockerelvis/report-url-generator:447ddf1-20250629081556
---

# ---------------------------------------------------
# Secret Patch
# ---------------------------------------------------
apiVersion: v1
kind: Secret
metadata:
  name: minio-creds
  namespace: test-env
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin-credentials
  namespace: test-env
---

# ---------------------------------------------------
# SA Patch
# ---------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-manager
  namespace: test-env
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: statefulset-manager
  namespace: test-env
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: statefulset-manager-binding
  namespace: test-env
subjects:
  - kind: ServiceAccount
    name: argocd-manager
    namespace: test-env
roleRef:
  kind: Role
  name: statefulset-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent
  namespace: test-env
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent-logs-metrics
subjects:
  - kind: ServiceAccount
    name: grafana-agent
    namespace: test-env
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: test-env
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-pod-reader-binding
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: test-env
---

# ---------------------------------------------------
# Volume Patch
# ---------------------------------------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage
  namespace: test-env
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data
  namespace: test-env
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-data
  namespace: test-env
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
