---
# ---------------------------------------------------
# 1. Flask App Deployment + Service
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-app
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
    promtail.io/scrape: "true"
    promtail.io/path: "/var/log/containers/*.log"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "5000"  # Update if Flask metrics are exposed on port 5000
spec:
  replicas: 2
  selector:
    matchLabels:
      app: argocd-app
  template:
    metadata:
      labels:
        app: argocd-app
    spec:
      containers:
        - name: argocd-app
          image: dockerelvis/argocd-app:latest
          ports:
            - containerPort: 5000
          env:
            - name: MONGO_URI
              value: "mongodb://mongo-service:27017"
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: flask-service
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  type: NodePort
  selector:
    app: argocd-app
  ports:
    - port: 5000
      targetPort: 5000
      nodePort: 30090

---
# ---------------------------------------------------
# 1. Flask minio Deployment + Service
# ---------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-minio
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
    promtail.io/scrape: "true"
    promtail.io/path: "/var/log/containers/*.log"
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "5002"  # Update if Flask metrics are exposed on port 5002
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-minio
  template:
    metadata:
      labels:
        app: flask-minio
    spec:
      containers:
        - name: flask-minio
          image: dockerelvis/presigned-app:latest
          ports:
            - containerPort: 5002
          env:
            - name: MINIO_ENDPOINT
              value: "http://minio-service:9000"
            - name: MINIO_BUCKET
              value: "test-reports"
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: secretkey

---
apiVersion: v1
kind: Service
metadata:
  name: flask-minio-service
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "6"
spec:
  selector:
    app: flask-minio
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5002
  type: NodePort

