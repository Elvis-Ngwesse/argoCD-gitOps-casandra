---
# ---------------------------------------------------
# 1. Batch Job (python-test-job)
# ---------------------------------------------------
apiVersion: batch/v1
kind: Job
metadata:
  name: python-test-job
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      volumes:
        - name: app-code
          emptyDir: {}

      initContainers:
        - name: git-clone
          image: alpine/git
          command:
            - sh
            - -c
            - git clone https://github.com/Elvis-Ngwesse/argoCD-mongodb.git /app
          volumeMounts:
            - name: app-code
              mountPath: /app

      containers:
        - name: pytest
          image: python:3.10
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: accesskey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: secretkey
            - name: MINIO_ENDPOINT
              value: "http://minio-service:9000"
            - name: MINIO_BUCKET
              value: "test-reports"
            - name: TIMESTAMP
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['timestamp']
          command:
            - sh
            - -c
            - |
              pip install -r unit-tests/requirements.txt boto3 pytest-html prometheus_flask_exporter && \
              export PYTHONPATH=/app && \
              TIMESTAMP=$(date +%Y%m%d%H%M%S) && \
              pytest unit-tests/test_app.py --junitxml=results_$TIMESTAMP.xml --html=results_$TIMESTAMP.html && \
              python3 /app/unit-tests/upload_results.py $TIMESTAMP

          workingDir: /app
          volumeMounts:
            - name: app-code
              mountPath: /app

---
# ---------------------------------------------------
# 2. Batch Job (delete-mongo-statefulset)
# ---------------------------------------------------
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-mongo-statefulset
  namespace: test
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  backoffLimit: 1
  template:
    spec:
      serviceAccountName: argocd-manager
      restartPolicy: Never
      containers:
        - name: kubectl
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              kubectl delete statefulset mongo --namespace=test --cascade=orphan || true